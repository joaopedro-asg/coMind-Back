generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Depoimentos {
  id         Int      @id @default(autoincrement())
  pacienteID Int      @unique
  nome       String
  local      String
  texto      String
  dataEnvio  DateTime @default(now())
  paciente   Paciente @relation(fields: [pacienteID], references: [id])
}

model Atendimento {
  id             Int          @id @default(autoincrement())
  profissionalID Int
  pacienteID     Int
  data           DateTime     @default(now())
  horario        DateTime     @default(now())
  status         String
  paciente       Paciente     @relation(fields: [pacienteID], references: [id])
  profissional   Profissional @relation(fields: [profissionalID], references: [id])
}

model GruposApoio {
  id             Int          @id @default(autoincrement())
  profissionalID Int
  tipo           String
  descricao      String
  local          String
  profissional   Profissional @relation(fields: [profissionalID], references: [id])
}

model Usuario {
  id           Int           @id @default(autoincrement())
  nomeUsario   String
  email        String        @unique
  senha        String
  tipo         UsuarioTipo   @default(PACIENTE)
  paciente     Paciente?
  profissional Profissional?
}

model Profissional {
  id                         Int @id @default(autoincrement())
  usuarioID                  Int @unique
  nomeCompleto               String
  matricula                  String @unique
  genero                     String
  bio                        String
  formacoes                  String
  especialidade              Especialidades[]
  faixaEtaria                FaixaEtaria[]
  preco                      Int
  regiao                     String
  foto                       String
  diasAtendimento            DiasAtendimento[]
  quantAtendimentosGratuitos Int

  atendimentos               Atendimento[]
  evolucoesClinicas          EvolucaoClinica[]
  gruposApoio                GruposApoio[]

  usuario                    Usuario @relation(fields: [usuarioID], references: [id], onDelete: Cascade)
}

enum Especialidades {
  ANSIEDADE
  DEPRESSAO
  FOBIAS
  AUTOCONHECIMENTO
  AUTOESTIMA
  BORDERLINE
  BULIMIA
  CANCER
  TRANSTORNOS
  COMPULSOES
  DISLEXIA
  DISTURBIOS
  DROGAS
  ESQUIZOFRENIA
  ESTRESSA
  HIPERATIVIDADE
  HIPOCONDRIA
  OBESIDADE
  BURNOUT
  SEXUALIDADE
  SUICIDIO
}

enum FaixaEtaria {
  CRIANCAS
  ADOLESCENTES
  ADULTOS
  IDOSOS
  CASAIS
}

enum DiasAtendimento {
  DOMINGO
  SEGUNDA
  TERCA
  QUARTA
  QUINTA
  SEXTA
  SABADO
}

model Paciente {
  id                Int @id @default(autoincrement())
  usuarioID         Int @unique
  nomeCompleto      String
  genero            String
  idade             Int
  principaisQueixas String
  usoDeMedicamentos String
  objetivoDaTerapia String
  historicoFamiliar String

  atendimentos      Atendimento[]
  evolucoesClinicas EvolucaoClinica[]
  depoimentos       Depoimentos?
  
  usuario           Usuario @relation(fields: [usuarioID], references: [id], onDelete: Cascade)
}

model EvolucaoClinica {
  id                  Int @id @default(autoincrement())
  pacienteID          Int @unique
  profissionalID      Int @unique
  relatoAtendimento   String
  ajustesNoTratamento String
  data                DateTime @default(now())

  paciente            Paciente  @relation(fields: [pacienteID], references: [id])
  profissional        Profissional @relation(fields: [profissionalID], references: [id])
}